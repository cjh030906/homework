// 다양한 브랜치 병합

브랜치 병합
병합(merge) : 두 개의 브랜치를 하나로 모으는 과정
fast-forward(빨리 감기)병합, 3-way병합

fast-forward 병합조건 : 현재 브랜치 master가 병합할 대상 커밋의 직접적인 뿌리가 되는 경우
간단히 두 브랜치가 일렬상태, bugfix 브랜치 이력이 master 브랜치 이력을 모두 포함하는 경우
브랜치 master에서 병합 명령 $ git merge bugfix

빨리 감기 fast-forward 병합 수행
master 브랜치는 단순히 이동
이 때는 합칠 내용이 없음. 간단히 가리키는 지점이 대상 커밋이 되고 master가 bugfix로 이동 > 작업공간과 스테이징 영역이 이동되는 Y 상태로됨
기준 브랜치 master
$ git merge bugfix

3-way상태 : 두분기가 갈라진 상태
두 브랜치의 조상이 같은 경우 : master 브랜치 내의 변경 내용과 bugfix 브랜치 내의 변경 내용을 하나로 통합할 필요
3-way 병합 : 새로운 커밋을 사용하여 두 기록을 합침
새로운 커밋 E 생성
두 브랜치의 변경을 가져온 'merge commit(병합 커밋)'E를 생성
병합 완료 후, 통합 브랜치인 'master' 브랜치로 통합된 이력이 생성
-m이 없으면 메시지 입력할 기본 편집기 실행 > 'Merge branch bugfix'이 기본 메시지 내용

일렬 상태에서 기본이 fast forward 병합
병합할 브랜치의 조상이 기준 브랜치인 경우, 즉 일렬상태에서
병합 기본은 fast forward 병합. 마스터 브랜치에서 브랜치 dev1을 병합. 기본이 fast-forward 병합

기본이 fastforward 상태에서 non fast forward 병합
마스터에서 dev1을 fast forward로 병합 $git merge dev1
마스터에서 dev1을 non fast forward로 병합(3-way 병합) 옵션 --no-ff $ git merge def1 --no-ff

두 브랜치의 일렬 상태에서 2가지 병합
일렬상태
옵셥 없는 경우 fast-forward merge $ git merge topic
옵션 --no-ff 3-way merge $ git merge --no-ff topic

//요점

기준 브랜치에서 hotfix 브랜치 병합
$ git merge hotfix // fast-forward, 3-way merge

무조건 3-way 병합 수행
$ git merge --no-ff hotfix

fast-forward인 경우에만 병합 진행
$ git merge --ff-only hotfix

현재 브랜치에서 커밋 하나만 생성해서 병합
$ git merge --squash hotfix



